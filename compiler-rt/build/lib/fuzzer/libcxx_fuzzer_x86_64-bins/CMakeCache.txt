# This is the CMakeCache file.
# For build in directory: /home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64-bins
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:UNINITIALIZED=/usr/bin/c++

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=-m64

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//No help, variable specified on the command line.
CMAKE_C_COMPILER:UNINITIALIZED=/usr/bin/cc

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar-9

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib-9

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=-m64

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//No help, variable specified on the command line.
CMAKE_MAKE_PROGRAM:UNINITIALIZED=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=custom-libcxx

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//No help, variable specified on the command line.
CMAKE_TRY_COMPILE_TARGET_TYPE:UNINITIALIZED=STATIC_LIBRARY

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//No help, variable specified on the command line.
COMPILER_RT_LIBCXXABI_PATH:UNINITIALIZED=/home/llvm-project/llvm/../libcxxabi

//No help, variable specified on the command line.
COMPILER_RT_LIBCXX_PATH:UNINITIALIZED=/home/llvm-project/llvm/../libcxx

//Build libc++abi for baremetal targets.
LIBCXXABI_BAREMETAL:BOOL=OFF

//Build 32 bit libc++abi.
LIBCXXABI_BUILD_32_BITS:BOOL=OFF

//Build libc++abi with an externalized threading library.
//\n   This option may only be set to ON when LIBCXXABI_ENABLE_THREADS=ON
LIBCXXABI_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXXABI_ENABLE_ASSERTIONS:BOOL=ON

//Provide support for exceptions in the runtime.
//\n  When disabled, libc++abi does not support stack unwinding
// and other exceptions-related features.
LIBCXXABI_ENABLE_EXCEPTIONS:BOOL=OFF

//Build libc++abi with definitions for operator new/delete. Normally
// libc++
//\n    provides these definitions
LIBCXXABI_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Compile with pedantic enabled.
LIBCXXABI_ENABLE_PEDANTIC:BOOL=ON

//Build Position-Independent Code, even in static library
LIBCXXABI_ENABLE_PIC:BOOL=ON

//Build libc++abi as a shared library.
LIBCXXABI_ENABLE_SHARED:BOOL=OFF

//Build libc++abi as a static library.
LIBCXXABI_ENABLE_STATIC:BOOL=ON

//Statically link the LLVM unwinder.
LIBCXXABI_ENABLE_STATIC_UNWINDER:BOOL=OFF

//Build with threads enabled
LIBCXXABI_ENABLE_THREADS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBCXXABI_ENABLE_WERROR:BOOL=OFF

//GCC toolchain for cross compiling.
LIBCXXABI_GCC_TOOLCHAIN:PATH=

//Build libc++abi with an externalized threading API.
//\n  This option may only be set to ON when LIBCXXABI_ENABLE_THREADS=ON.
LIBCXXABI_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXXABI_HAS_PTHREAD_API:BOOL=OFF

//Do not export any symbols from the static library.
LIBCXXABI_HERMETIC_STATIC_LIBRARY:STRING=ON

//Generate build targets for the libc++abi unit tests.
LIBCXXABI_INCLUDE_TESTS:BOOL=OFF

//Install the libc++abi library.
LIBCXXABI_INSTALL_LIBRARY:BOOL=ON

//Define libc++abi destination prefix.
LIBCXXABI_INSTALL_PREFIX:STRING=

//Install the static libc++abi library.
LIBCXXABI_INSTALL_STATIC_LIBRARY:BOOL=ON

//Specify path to libc++ includes.
LIBCXXABI_LIBCXX_INCLUDES:PATH=/home/llvm-project/libcxx/include

//The path to libc++ library.
LIBCXXABI_LIBCXX_LIBRARY_PATH:PATH=

//Specify path to libc++ source.
LIBCXXABI_LIBCXX_PATH:PATH=/home/llvm-project/llvm/../libcxx

//Define suffix of library directory name (32/64)
LIBCXXABI_LIBDIR_SUFFIX:STRING=

//Specify path to libunwind includes.
LIBCXXABI_LIBUNWIND_INCLUDES:PATH=

//Specify path to libunwind source.
LIBCXXABI_LIBUNWIND_PATH:PATH=

//Set this to make the terminate handler default to a silent alternative
LIBCXXABI_SILENT_TERMINATE:BOOL=OFF

//Sysroot for cross compiling.
LIBCXXABI_SYSROOT:PATH=

//Target triple for cross compiling.
LIBCXXABI_TARGET_TRIPLE:STRING=

//Use compiler-rt instead of libgcc
LIBCXXABI_USE_COMPILER_RT:BOOL=OFF

//Build and use the LLVM unwinder.
LIBCXXABI_USE_LLVM_UNWINDER:BOOL=OFF

//A semicolon separated list of ABI macros to define in the site
// config header.
LIBCXX_ABI_DEFINES:STRING=

//Ignore auto-detection and force use of the Itanium ABI.
LIBCXX_ABI_FORCE_ITANIUM:BOOL=OFF

//Ignore auto-detection and force use of the Microsoft ABI.
LIBCXX_ABI_FORCE_MICROSOFT:BOOL=OFF

//The inline ABI namespace used by libc++. It defaults to __n where
// `n` is the current ABI version.
LIBCXX_ABI_NAMESPACE:STRING=Fuzzer

//Unstable ABI of libc++.
LIBCXX_ABI_UNSTABLE:BOOL=OFF

//ABI version of libc++. Can be either 1 or 2, where 2 is currently
// not stable. Defaults to 1.
LIBCXX_ABI_VERSION:STRING=1

//Use alternate GCC toolchain when building the native benchmarks
LIBCXX_BENCHMARK_NATIVE_GCC_TOOLCHAIN:STRING=

//Build the benchmarks against the specified native STL.
//\n         The value must be one of libc++/libstdc++
LIBCXX_BENCHMARK_NATIVE_STDLIB:STRING=

//Arguments to pass when running the benchmarks using check-cxx-benchmarks
LIBCXX_BENCHMARK_TEST_ARGS:STRING=--benchmark_min_time=0.01

//Build 32 bit libc++.
LIBCXX_BUILD_32_BITS:BOOL=OFF

//Build libc++ with an externalized threading library.
//\n     This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON
LIBCXX_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF

//Configure libcxx for use within an IDE
LIBCXX_CONFIGURE_IDE:BOOL=OFF

//The Profile-rt library used to build with code coverage
LIBCXX_COVERAGE_LIBRARY:STRING=

LIBCXX_CXX_ABI:STRING=libcxxabi

//Paths to C++ ABI header directories separated by ';'.
LIBCXX_CXX_ABI_INCLUDE_PATHS:PATH=/home/llvm-project/llvm/../libcxxabi/include

//Paths to C++ ABI library directory
LIBCXX_CXX_ABI_LIBRARY_PATH:PATH=

//Disable #warnings about conflicting macros.
LIBCXX_DISABLE_MACRO_CONFLICT_WARNINGS:BOOL=OFF

//Use and install a linker script for the given ABI library
LIBCXX_ENABLE_ABI_LINKER_SCRIPT:BOOL=OFF

//Enable assertions independent of build mode.
LIBCXX_ENABLE_ASSERTIONS:BOOL=OFF

//Use exceptions.
LIBCXX_ENABLE_EXCEPTIONS:BOOL=OFF

//Build libc++experimental.a
LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY:BOOL=OFF

//Build filesystem as part of the main libc++ library
LIBCXX_ENABLE_FILESYSTEM:BOOL=ON

//Build libc++ with support for the global filesystem namespace.
LIBCXX_ENABLE_GLOBAL_FILESYSTEM_NAMESPACE:BOOL=ON

//Build libc++ with support for a monotonic clock.
//\n   This option may only be set to OFF when LIBCXX_ENABLE_THREADS=OFF.
LIBCXX_ENABLE_MONOTONIC_CLOCK:BOOL=ON

//Build libc++ with definitions for operator new/delete. This option
// can
//\n     be used to disable the definitions when libc++abi is expected
// to provide
//\n     them
LIBCXX_ENABLE_NEW_DELETE_DEFINITIONS:BOOL=ON

//Compile with pedantic enabled.
LIBCXX_ENABLE_PEDANTIC:BOOL=OFF

//Use run time type information.
LIBCXX_ENABLE_RTTI:BOOL=ON

//Build libc++ as a shared library.
LIBCXX_ENABLE_SHARED:BOOL=OFF

//Build libc++ as a static library.
LIBCXX_ENABLE_STATIC:BOOL=ON

//Use a static copy of the ABI library when linking libc++.
//\n   This option cannot be used with LIBCXX_ENABLE_ABI_LINKER_SCRIPT.
LIBCXX_ENABLE_STATIC_ABI_LIBRARY:BOOL=ON

//Build libc++ with support for stdin/std::cin.
LIBCXX_ENABLE_STDIN:BOOL=ON

//Build libc++ with support for stdout/std::cout.
LIBCXX_ENABLE_STDOUT:BOOL=ON

//Build libc++ with support for threads.
LIBCXX_ENABLE_THREADS:BOOL=ON

//Build libc++ with support for thread-unsafe C functions
LIBCXX_ENABLE_THREAD_UNSAFE_C_FUNCTIONS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBCXX_ENABLE_WERROR:BOOL=OFF

//Executor to use when running tests.
LIBCXX_EXECUTOR:STRING=None

//Use alternate GCC toolchain.
LIBCXX_GCC_TOOLCHAIN:STRING=

//Enable generating code coverage.
LIBCXX_GENERATE_COVERAGE:BOOL=OFF

//Build libc++ with an externalized threading API.
//\n   This option may only be set to ON when LIBCXX_ENABLE_THREADS=ON.
LIBCXX_HAS_EXTERNAL_THREAD_API:BOOL=OFF

//Whether typeinfo names are expected to be unique. Defining this
// option overrides the default configuration in the library.
LIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT:STRING=

//Build libc++ with support for the Musl C library
LIBCXX_HAS_MUSL_LIBC:BOOL=OFF

//Ignore auto-detection and force use of pthread API
LIBCXX_HAS_PTHREAD_API:BOOL=OFF

//Ignore auto-detection and force use of win32 thread API
LIBCXX_HAS_WIN32_THREAD_API:BOOL=OFF

//Do not export any symbols from the static library.
LIBCXX_HERMETIC_STATIC_LIBRARY:BOOL=ON

//Enable per TU ABI insulation by default. To be used by vendors.
LIBCXX_HIDE_FROM_ABI_PER_TU_BY_DEFAULT:BOOL=OFF

//Build the libc++ benchmarks and their dependencies
LIBCXX_INCLUDE_BENCHMARKS:BOOL=ON

//Build the libc++ documentation.
LIBCXX_INCLUDE_DOCS:BOOL=ON

//Build the libc++ tests.
LIBCXX_INCLUDE_TESTS:BOOL=ON

//Install the libc++ headers.
LIBCXX_INSTALL_HEADERS:BOOL=ON

//Define libc++ header destination prefix.
LIBCXX_INSTALL_HEADER_PREFIX:STRING=

//Install the libc++ library.
LIBCXX_INSTALL_LIBRARY:BOOL=ON

//Define libc++ destination prefix.
LIBCXX_INSTALL_PREFIX:STRING=

//Install the static libc++ library.
LIBCXX_INSTALL_STATIC_LIBRARY:BOOL=ON

//Install libc++ support headers.
LIBCXX_INSTALL_SUPPORT_HEADERS:BOOL=ON

//Version of libc++abi's ABI to re-export from libc++ when re-exporting
// is enabled.
//\n                                               Note that this
// is not related to the version of libc++'s ABI itself!
LIBCXX_LIBCPPABI_VERSION:STRING=2

//Define suffix of library directory name (32/64)
LIBCXX_LIBDIR_SUFFIX:STRING=

//Configuration variant to use for LIT.
LIBCXX_LIT_VARIANT:STRING=libcxx

//Enable overwriting darwins libc++ installation.
LIBCXX_OVERRIDE_DARWIN_INSTALL:BOOL=OFF

//internal option to change build dialect
LIBCXX_STANDARD_VER:STRING=c++11

//Statically link the ABI library to static library
LIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY:BOOL=ON

//Use alternate sysroot.
LIBCXX_SYSROOT:STRING=

//TargetInfo to use when setting up test environment.
LIBCXX_TARGET_INFO:STRING=libcxx.test.target_info.LocalTI

//Use alternate target triple.
LIBCXX_TARGET_TRIPLE:STRING=

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_COMPILER_FLAGS:STRING=

//Additonal linker flags to pass when compiling the tests
LIBCXX_TEST_LINKER_FLAGS:STRING=

//Use compiler-rt instead of libgcc
LIBCXX_USE_COMPILER_RT:BOOL=OFF

//No help, variable specified on the command line.
LLVM_BINARY_DIR:UNINITIALIZED=/home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64

//Path to a program.
LLVM_CONFIG_PATH:FILEPATH=/usr/local/bin/llvm-config

//Command used to spawn lit
LLVM_EXTERNAL_LIT:STRING=

//Path to llvm/include
LLVM_INCLUDE_DIR:PATH=

//No help, variable specified on the command line.
LLVM_LIBRARY_OUTPUT_INTDIR:UNINITIALIZED=/home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64/lib

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv --show-xfail --show-unsupported

//Path to LLVM source tree
LLVM_PATH:PATH=/home/llvm-project/llvm

//Define the sanitizer used to build the library and tests
LLVM_USE_SANITIZER:STRING=

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3.8

//Value Computed by CMake
custom-libcxx_BINARY_DIR:STATIC=/home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64-bins

//Value Computed by CMake
custom-libcxx_SOURCE_DIR:STATIC=/home/llvm-project/compiler-rt/cmake/Modules/CustomLibcxx

//Dependencies for the target
cxx_static_LIB_DEPENDS:STATIC=general;-nodefaultlibs;general;pthread;general;c;general;m;general;rt;general;gcc_s;

//Dependencies for the target
cxxabi_static_LIB_DEPENDS:STATIC=general;pthread;general;c;general;gcc_s;

//Value Computed by CMake
libcxx_BINARY_DIR:STATIC=/home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64-bins/cxx

//Value Computed by CMake
libcxx_SOURCE_DIR:STATIC=/home/llvm-project/libcxx

//Value Computed by CMake
libcxxabi_BINARY_DIR:STATIC=/home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64-bins/cxxabi

//Value Computed by CMake
libcxxabi_SOURCE_DIR:STATIC=/home/llvm-project/libcxxabi


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/llvm-project/compiler-rt/build/lib/fuzzer/libcxx_fuzzer_x86_64-bins
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=16
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/llvm-project/compiler-rt/cmake/Modules/CustomLibcxx
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=11
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.16
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[/usr/bin/python3.8][v3.8.5()]
//Have library c
LIBCXXABI_HAS_CXA_THREAD_ATEXIT_IMPL:INTERNAL=1
//Have library c
LIBCXXABI_HAS_C_LIB:INTERNAL=1
//Have library dl
LIBCXXABI_HAS_DL_LIB:INTERNAL=1
//Have library gcc_s
LIBCXXABI_HAS_GCC_S_LIB:INTERNAL=1
//Test LIBCXXABI_HAS_NODEFAULTLIBS_FLAG
LIBCXXABI_HAS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXXABI_HAS_NOSTDINCXX_FLAG
LIBCXXABI_HAS_NOSTDINCXX_FLAG:INTERNAL=1
//Have library pthread
LIBCXXABI_HAS_PTHREAD_LIB:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_EHA_FLAG
LIBCXXABI_SUPPORTS_EHA_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_EHS_FLAG
LIBCXXABI_SUPPORTS_EHS_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_FNO_EXCEPTIONS_FLAG
LIBCXXABI_SUPPORTS_FNO_EXCEPTIONS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_FSTRICT_ALIASING_FLAG
LIBCXXABI_SUPPORTS_FSTRICT_ALIASING_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_FVISIBILITY_EQ_HIDDEN_FLAG
LIBCXXABI_SUPPORTS_FVISIBILITY_EQ_HIDDEN_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_FVISIBILITY_GLOBAL_NEW_DELETE_HIDDEN_FLAG
LIBCXXABI_SUPPORTS_FVISIBILITY_GLOBAL_NEW_DELETE_HIDDEN_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXXABI_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_PEDANTIC_FLAG
LIBCXXABI_SUPPORTS_PEDANTIC_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WALL_FLAG
LIBCXXABI_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG
LIBCXXABI_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WCONVERSION_FLAG
LIBCXXABI_SUPPORTS_WCONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXXABI_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WMISMATCHED_TAGS_FLAG
LIBCXXABI_SUPPORTS_WMISMATCHED_TAGS_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_WMISSING_BRACES_FLAG
LIBCXXABI_SUPPORTS_WMISSING_BRACES_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WNEWLINE_EOF_FLAG
LIBCXXABI_SUPPORTS_WNEWLINE_EOF_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_WNO_ERROR_FLAG
LIBCXXABI_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSHADOW_FLAG
LIBCXXABI_SUPPORTS_WSHADOW_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSHORTEN_64_TO_32_FLAG
LIBCXXABI_SUPPORTS_WSHORTEN_64_TO_32_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_WSIGN_COMPARE_FLAG
LIBCXXABI_SUPPORTS_WSIGN_COMPARE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSIGN_CONVERSION_FLAG
LIBCXXABI_SUPPORTS_WSIGN_CONVERSION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG
LIBCXXABI_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG
LIBCXXABI_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNDEF_FLAG
LIBCXXABI_SUPPORTS_WUNDEF_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_FUNCTION_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_FUNCTION_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_PARAMETER_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WUNUSED_VARIABLE_FLAG
LIBCXXABI_SUPPORTS_WUNUSED_VARIABLE_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXXABI_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXXABI_SUPPORTS_WX_FLAG
LIBCXXABI_SUPPORTS_WX_FLAG:INTERNAL=
//Test LIBCXXABI_SUPPORTS_W_FLAG
LIBCXXABI_SUPPORTS_W_FLAG:INTERNAL=1
//STRINGS property for variable: LIBCXX_CXX_ABI
LIBCXX_CXX_ABI-STRINGS:INTERNAL=none;default;libcxxabi;libcxxrt;libstdc++;libsupc++;vcruntime
//Have library atomic
LIBCXX_HAS_ATOMIC_LIB:INTERNAL=1
//Have library c
LIBCXX_HAS_C_LIB:INTERNAL=1
//Have library gcc_s
LIBCXX_HAS_GCC_S_LIB:INTERNAL=1
//STRINGS property for variable: LIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT
LIBCXX_HAS_MERGED_TYPEINFO_NAMES_DEFAULT-STRINGS:INTERNAL=
//Have library m
LIBCXX_HAS_M_LIB:INTERNAL=1
//Have library pthread
LIBCXX_HAS_PTHREAD_LIB:INTERNAL=1
//Have library rt
LIBCXX_HAS_RT_LIB:INTERNAL=1
//Test LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB
LIBCXX_HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//ADVANCED property for variable: LIBCXX_OVERRIDE_DARWIN_INSTALL
LIBCXX_OVERRIDE_DARWIN_INSTALL-ADVANCED:INTERNAL=1
//Test LIBCXX_SUPPORTS_EHA_FLAG
LIBCXX_SUPPORTS_EHA_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_EHS_FLAG
LIBCXX_SUPPORTS_EHS_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_FNO_EXCEPTIONS_FLAG
LIBCXX_SUPPORTS_FNO_EXCEPTIONS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_FVISIBILITY_EQ_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_EQ_HIDDEN_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_FVISIBILITY_GLOBAL_NEW_DELETE_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_GLOBAL_NEW_DELETE_HIDDEN_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG
LIBCXX_SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG
LIBCXX_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_NODEFAULTLIB_FLAG
LIBCXX_SUPPORTS_NODEFAULTLIB_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_NOSTDINCXX_FLAG
LIBCXX_SUPPORTS_NOSTDINCXX_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_COLON_CXX11_FLAG
LIBCXX_SUPPORTS_STD_COLON_CXX11_FLAG:INTERNAL=
//Test LIBCXX_SUPPORTS_STD_EQ_CXX11_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX11_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG
LIBCXX_SUPPORTS_STD_EQ_CXX17_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WALL_FLAG
LIBCXX_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBCXX_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WEXTRA_FLAG
LIBCXX_SUPPORTS_WEXTRA_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG
LIBCXX_SUPPORTS_WEXTRA_SEMI_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_CXX14_COMPAT_FLAG
LIBCXX_SUPPORTS_WNO_CXX14_COMPAT_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_ERROR_FLAG
LIBCXX_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_LITERAL_SUFFIX_FLAG
LIBCXX_SUPPORTS_WNO_LITERAL_SUFFIX_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG
LIBCXX_SUPPORTS_WNO_LONG_LONG_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_NOEXCEPT_TYPE_FLAG
LIBCXX_SUPPORTS_WNO_NOEXCEPT_TYPE_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG
LIBCXX_SUPPORTS_WNO_UNUSED_PARAMETER_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG
LIBCXX_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_W_FLAG
LIBCXX_SUPPORTS_W_FLAG:INTERNAL=1
//Test LIBCXX_SUPPORTS_ZL_FLAG
LIBCXX_SUPPORTS_ZL_FLAG:INTERNAL=
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
algorithms.partition_point_REPORTED:INTERNAL=ON
algorithms_REPORTED:INTERNAL=ON
filesystem_REPORTED:INTERNAL=ON
function_REPORTED:INTERNAL=ON
ordered_set_REPORTED:INTERNAL=ON
string_REPORTED:INTERNAL=ON
stringstream_REPORTED:INTERNAL=ON
unordered_set_operations_REPORTED:INTERNAL=ON
util_smartptr_REPORTED:INTERNAL=ON
vector_operations_REPORTED:INTERNAL=ON

